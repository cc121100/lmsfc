<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/integration/jms"
       xmlns:stream="http://www.springframework.org/schema/integration/stream"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration 
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/integration/jms
		http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
		http://www.springframework.org/schema/integration/stream
		http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">


    <import resource="classpath*:spring/spring-task-jms.xml"/>

    <int:control-bus input-channel="jmsTaskInputChl"/>

    <jms:message-driven-channel-adapter id="getJmsTask" channel="jmsTaskInputChl"
    destination="inQueue"  auto-startup="false" error-channel="errorChannel"/>
    <!-- here destination is the queue in activemq defined in spring-task-jms.xml, the queue's name is 'jmsQueue' defined in inQueue construct-->


    <int:router input-channel="jmsTaskInputChl" expression="payload.type">
        <int:mapping value="B" channel="batchArtTaskChl"/>
        <int:mapping value="S" channel="singleArtTaskChl"/>
        <int:mapping value="RA" channel="toReAssembleChl"/>
    </int:router>
    <!--<int:payload-type-router input-channel="jmsTaskInputChl">-->
        <!--<int:mapping type="com.cc.lmsfc.common.model.task.BatchArticleTaskJob" channel="batchArtTaskChl" />-->
        <!--<int:mapping type="com.cc.lmsfc.common.model.task.ArticleTaskJob" channel="singleArtTaskChl" />-->
    <!--</int:payload-type-router>-->

    <int:service-activator id="reassembleArtService" input-channel="toReAssembleChl"
                           ref="reAssembleService" method="reassemble"/>


    <int:service-activator id="getBatchArtTaskJobService" input-channel="batchArtTaskChl"
                           ref="batchArtTaskJobService" method="messageHandler" output-channel="listForBatchArtTaskChl"/>

    <int:splitter input-channel="listForBatchArtTaskChl"
                  output-channel="toValidateArtChl" />


    <int:service-activator id="getArtTaskJobService" input-channel="singleArtTaskChl"
            ref="artTaskJobService" method="messageHandler" output-channel="toArtTaskRouterChl"/>

    <int:router input-channel="toArtTaskRouterChl" expression="payload.state">
        <int:mapping value="0" channel="toValidateArtChl"/>
        <int:mapping value="111" channel="toValidateArtChl"/>
        <int:mapping value="112" channel="toValidateArtChl"/>
        <int:mapping value="121" channel="toParseArtChl"/>
        <int:mapping value="122" channel="toParseArtChl"/>
        <int:mapping value="131" channel="toFreemarkerArtEleChl"/>
        <int:mapping value="132" channel="toFreemarkerArtEleChl"/>
        <int:mapping value="141" channel="toDeployArtChl"/>
        <int:mapping value="142" channel="toDeployArtChl"/>
    </int:router>

    <!--validate task job-->
    <int:service-activator id="validateArtTaskJob" input-channel="toValidateArtChl"
                           ref="artTaskJobService" method="validate" output-channel="toGetArtChl"/>

    <int:service-activator id="downloadArt" input-channel="toGetArtChl"
            ref="artTaskJobService" method="download" output-channel="updateStateChl"/>

    <!--<int:router input-channel="befToParseArtChl" expression="payload.isWhole">-->
        <!--<int:mapping value="true" channel="toParseArtChl" />-->
        <!--<int:mapping value="false" channel="toNotifyWebChl" />-->
    <!--</int:router>-->

    <int:service-activator id="parseArt" input-channel="toParseArtChl"
            ref="parseService" method="parse" output-channel="toFilterArtChl" />

    <int:service-activator id="filteArt" input-channel="toFilterArtChl"
            ref="filterService" method="filter" output-channel="toGenerateArtEleChl"/>

    <int:service-activator id="generateArtEle" input-channel="toGenerateArtEleChl"
            ref="artElementService" method="generate" output-channel="updateStateChl"/>

    <!--<int:router input-channel="befToFreemarkerArtEleChl" expression="payload.isWhole">-->
        <!--<int:mapping value="true" channel="toFreemarkerArtEleChl" />-->
        <!--<int:mapping value="false" channel="toNotifyWebChl" />-->
    <!--</int:router>-->

    <int:service-activator id="freemarkerArt" input-channel="toFreemarkerArtEleChl"
            ref="articleService" method="assemble" output-channel="updateStateChl"/>

    <!--<int:router input-channel="befToDeployArtChl" expression="payload.isWhole">-->
        <!--<int:mapping value="true" channel="toDeployArtChl" />-->
        <!--<int:mapping value="false" channel="toNotifyWebChl" />-->
    <!--</int:router>-->

    <int:service-activator id="deployArt" input-channel="toDeployArtChl"
                           ref="articleService" method="deploy" output-channel="updateStateChl"/>

    <int:service-activator id="notifyWeb" input-channel="toNotifyWebChl"
            ref="notifyService" method="notifyWeb"/>

    <int:service-activator id="updateStateAnd" input-channel="updateStateChl"
            ref="artTaskJobService" method="updateArtStateAndLog" output-channel="befToArtTaskRouterChl"/>

    <!--<int:router input-channel="befToArtTaskRouterChl" expression="payload.isWhole">-->
        <!--<int:mapping value="true" channel="toArtTaskRouterChl" />-->
        <!--<int:mapping value="false" channel="toNotifyWebChl" />-->
    <!--</int:router>-->

    <int:recipient-list-router id="customRouter" input-channel="befToArtTaskRouterChl">
        <int:recipient channel="toArtTaskRouterChl" selector-expression="payload.isWhole EQ 1 and payload.state LT 150"/>
        <int:recipient channel="toNotifyWebChl" selector-expression="payload.isWhole EQ 0 or (payload.isWhole EQ 1 and payload.state GE 150)"/>
    </int:recipient-list-router>

    <!--error handler-->
    <int:exception-type-router input-channel="errorChannel">
        <int:mapping exception-type="com.cc.lmsfc.task.exception.AssembleArtException" channel="artTaskJobExceptionChl"/>
        <int:mapping exception-type="com.cc.lmsfc.task.exception.DeployArtException" channel="artTaskJobExceptionChl"/>
        <int:mapping exception-type="com.cc.lmsfc.task.exception.GenerateArtEleException" channel="artTaskJobExceptionChl"/>
        <int:mapping exception-type="com.cc.lmsfc.task.exception.GetArticleException" channel="artTaskJobExceptionChl"/>
        <int:mapping exception-type="java.lang.RuntimeException" channel="artTaskJobExceptionChl"/>
    </int:exception-type-router>

    <int:service-activator id="handlerRuntimeEptService" input-channel="artTaskJobExceptionChl"
                           ref="taskExcpHandleService" method="handler"/>


    <!--channels-->
    <int:channel id="jmsTaskInputChl"/>
    <int:channel id="singleArtTaskChl"/>
    <int:channel id="batchArtTaskChl"/>
    <int:channel id="listForBatchArtTaskChl">
        <int:dispatcher task-executor="artTaskExecutor"/>
    </int:channel>
    <int:channel id="toArtTaskRouterChl" />
    <int:channel id="toValidateArtChl" />
    <int:channel id="toGetArtChl" />

    <int:channel id="toParseArtChl" />
    <int:channel id="toFilterArtChl" />
    <int:channel id="toGenerateArtEleChl" />

    <int:channel id="toFreemarkerArtEleChl" />

    <int:channel id="toDeployArtChl" />

    <int:channel id="toNotifyWebChl" />

    <int:channel id="updateStateChl" />
    <int:channel id="befToArtTaskRouterChl" />

    <int:channel id="errorChannel">
        <!--<int:queue capacity="50"/>-->
    </int:channel>
    <int:channel id="artTaskJobExceptionChl"/>

    <int:channel id="toReAssembleChl"/>

    <!--<int:poller default="true" fixed-delay="50"/>-->

    <task:executor id="artTaskExecutor" pool-size="5-20"
                   queue-capacity="50" keep-alive="10000" />


    <!--<jms:outbound-channel-adapter destination-expression=""/>-->
    </beans>